// ===========================================
// Form Mixins - Bootstrap 4 Based
// ===========================================

@use "sass:math";
@import './variables';

// Breakpoint mixins
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: map-get($breakpoints, $name);
  @if $max {
    @media (max-width: $max - 0.02) {
      @content;
    }
  } @else {
    @content;
  }
}

// Grid column mixin
@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage(math.div($size, $columns));
  max-width: percentage(math.div($size, $columns));
}

// Grid column responsive mixin
@mixin make-col-ready() {
  position: relative;
  width: 100%;
  padding-right: math.div($grid-gutter-width, 2);
  padding-left: math.div($grid-gutter-width, 2);
}

// Form control base styles
@mixin form-control-base() {
  display: block;
  width: 100%;
  height: $input-height;
  padding: $input-padding-y $input-padding-x;
  font-family: $input-font-family;
  font-size: $input-font-size;
  font-weight: $input-font-weight;
  line-height: $input-line-height;
  color: $input-color;
  background-color: $input-bg;
  background-clip: padding-box;
  border: $input-border-width solid $input-border-color;
  border-radius: $input-border-radius;
  box-shadow: $input-box-shadow;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Remove select outline from select box in FF
  &::-moz-focus-inner {
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  &:focus {
    color: $input-focus-color;
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    outline: 0;
    box-shadow: $input-focus-box-shadow;
  }

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    opacity: 1;
  }

  // Disabled and read-only inputs
  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    border-color: $input-disabled-border-color;
    opacity: 1;
  }
}

// Form control sizing
@mixin form-control-size($height, $padding-y, $padding-x, $font-size, $border-radius) {
  height: $height;
  padding: $padding-y $padding-x;
  font-size: $font-size;
  border-radius: $border-radius;
}

// Form validation state mixin
@mixin form-validation-state($state, $color, $icon) {
  .form-control {
    border-color: $color;

    &:focus {
      border-color: $color;
      box-shadow: 0 0 0 $input-focus-width rgba($color, 0.25);
    }
  }

  .invalid-feedback,
  .#{$state}-feedback {
    display: block;
    width: 100%;
    margin-top: $form-feedback-margin-top;
    font-size: $form-feedback-font-size;
    color: $color;
  }

  .form-control-label {
    color: $color;
  }
}

// Loading animation mixin
@mixin loading-skeleton() {
  background: linear-gradient(90deg, $field-loading-bg 25%, rgba($field-loading-bg, 0.5) 50%, $field-loading-bg 75%);
  background-size: 200% 100%;
  animation: loading $field-loading-animation-duration infinite;
}

@keyframes loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

// Clearfix mixin
@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: '';
  }
}

// Screen reader only mixin
@mixin sr-only() {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// Form row mixin
@mixin form-row() {
  display: flex;
  flex-wrap: wrap;
  margin-right: $form-row-margin-right;
  margin-left: $form-row-margin-left;

  > .col,
  > [class*='col-'] {
    padding-right: 5px;
    padding-left: 5px;
  }
}

// Form group mixin
@mixin form-group() {
  margin-bottom: $form-group-margin-bottom;
}

// Required indicator mixin
@mixin required-indicator() {
  content: '*';
  color: $label-required-color;
  margin-left: 4px;
  font-weight: bold;
}

// Info icon mixin
@mixin info-icon() {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: $info-icon-size;
  height: $info-icon-size;
  margin-left: 6px;
  font-size: 12px;
  color: $info-icon-color;
  background-color: transparent;
  border: 1px solid $info-icon-color;
  border-radius: 50%;
  cursor: help;
  vertical-align: middle;

  &:hover {
    background-color: $info-icon-color;
    color: $white;
  }
}

// Tooltip mixin
@mixin tooltip-base() {
  position: absolute;
  z-index: 1070;
  display: block;
  margin: 0;
  font-family: inherit;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  text-align: left;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  word-spacing: normal;
  white-space: normal;
  line-break: auto;
  font-size: $info-tooltip-font-size;
  word-wrap: break-word;
  opacity: 0;

  &.show {
    opacity: 1;
  }
}

// Field offset for label alignment
@mixin field-label-offset() {
  margin-top: $field-label-offset-height;
}
