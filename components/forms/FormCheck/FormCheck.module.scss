// ===========================================
// FormCheck Component Styles
// ===========================================

@import '../styles/variables';
@import '../styles/mixins';

.formCheck {
  position: relative;
  display: block;
  padding-left: $form-check-input-gutter;
  margin-bottom: $form-check-input-margin-y;

  // Size variants
  &.sizeSm {
    padding-left: $form-check-input-gutter * 0.875;
    font-size: $input-font-size-sm;

    :global(.form-check-input) {
      width: 0.875rem;
      height: 0.875rem;
      margin-top: 0.125rem;
      margin-left: -($form-check-input-gutter * 0.875);
    }

    :global(.form-check-label) {
      font-size: $input-font-size-sm;
    }
  }

  &.sizeLg {
    padding-left: $form-check-input-gutter * 1.25;
    font-size: $input-font-size-lg;

    :global(.form-check-input) {
      width: 1.25rem;
      height: 1.25rem;
      margin-top: 0.125rem;
      margin-left: -($form-check-input-gutter * 1.25);
    }

    :global(.form-check-label) {
      font-size: $input-font-size-lg;
    }
  }

  // Inline variant
  &.inline {
    display: inline-block;
    margin-right: $form-check-inline-margin-x;
    margin-bottom: 0;
    padding-left: $form-check-inline-input-margin-x;

    :global(.form-check-input) {
      position: static;
      margin-top: 0;
      margin-right: $form-check-inline-input-margin-x;
      margin-left: 0;
    }
  }

  // Reverse layout (input after label)
  &.reverse {
    padding-left: 0;
    padding-right: $form-check-input-gutter;
    text-align: right;

    :global(.form-check-input) {
      position: absolute;
      right: 0;
      margin-left: 0;
      margin-right: -$form-check-input-gutter;
    }

    &.sizeSm {
      padding-right: $form-check-input-gutter * 0.875;

      :global(.form-check-input) {
        margin-right: -($form-check-input-gutter * 0.875);
      }
    }

    &.sizeLg {
      padding-right: $form-check-input-gutter * 1.25;

      :global(.form-check-input) {
        margin-right: -($form-check-input-gutter * 1.25);
      }
    }
  }

  // Gutter variants
  &.gutterNone {
    margin-bottom: 0;
  }

  &.gutterSm {
    margin-bottom: $form-check-input-margin-y * 0.5;
  }

  &.gutterLg {
    margin-bottom: $form-check-input-margin-y * 1.5;
  }

  // Validation states
  &.invalid {
    :global(.form-check-input) {
      border-color: $form-feedback-invalid-color;

      &:focus {
        border-color: $form-feedback-invalid-color;
        box-shadow: 0 0 0 0.2rem rgba($form-feedback-invalid-color, 0.25);
      }

      &:checked {
        background-color: $form-feedback-invalid-color;
        border-color: $form-feedback-invalid-color;
      }
    }

    :global(.form-check-label) {
      color: $form-feedback-invalid-color;
    }
  }

  &.valid {
    :global(.form-check-input) {
      border-color: $form-feedback-valid-color;

      &:focus {
        border-color: $form-feedback-valid-color;
        box-shadow: 0 0 0 0.2rem rgba($form-feedback-valid-color, 0.25);
      }

      &:checked {
        background-color: $form-feedback-valid-color;
        border-color: $form-feedback-valid-color;
      }
    }

    :global(.form-check-label) {
      color: $form-feedback-valid-color;
    }
  }
}

// Switch variant
.formCheck.variantSwitch {
  padding-left: 3rem;

  :global(.form-check-input) {
    width: 2rem;
    height: 1.25rem;
    margin-left: -3rem;
    background-image: none;
    background-color: $input-border-color;
    border: none;
    border-radius: 2rem;
    transition: background-color 0.15s ease-in-out;
    cursor: pointer;

    &:focus {
      box-shadow: 0 0 0 0.2rem rgba($primary, 0.25);
    }

    &:checked {
      background-color: $primary;

      &::before {
        transform: translateX(0.75rem);
      }
    }

    &::before {
      content: '';
      position: absolute;
      top: 0.125rem;
      left: 0.125rem;
      width: 1rem;
      height: 1rem;
      background-color: $white;
      border-radius: 50%;
      transition: transform 0.15s ease-in-out;
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  }

  // Switch size variants
  &.sizeSm {
    padding-left: 2.5rem;

    :global(.form-check-input) {
      width: 1.75rem;
      height: 1rem;
      margin-left: -2.5rem;

      &::before {
        width: 0.75rem;
        height: 0.75rem;
        top: 0.125rem;
        left: 0.125rem;
      }

      &:checked::before {
        transform: translateX(0.75rem);
      }
    }
  }

  &.sizeLg {
    padding-left: 3.5rem;

    :global(.form-check-input) {
      width: 2.5rem;
      height: 1.5rem;
      margin-left: -3.5rem;

      &::before {
        width: 1.25rem;
        height: 1.25rem;
        top: 0.125rem;
        left: 0.125rem;
      }

      &:checked::before {
        transform: translateX(1rem);
      }
    }
  }
}

// Button variant
.formCheck.variantButton {
  padding-left: 0;
  margin-bottom: 0;

  :global(.form-check-input) {
    position: absolute;
    clip: rect(0, 0, 0, 0);
    pointer-events: none;

    &:checked + .form-check-label {
      background-color: $primary;
      border-color: $primary;
      color: $white;
    }

    &:focus + .form-check-label {
      box-shadow: 0 0 0 0.2rem rgba($primary, 0.25);
    }

    &:disabled + .form-check-label {
      opacity: 0.65;
      cursor: not-allowed;
    }
  }

  :global(.form-check-label) {
    display: inline-block;
    padding: $input-padding-y $input-padding-x;
    margin-bottom: 0;
    font-weight: 400;
    line-height: $input-line-height;
    color: $input-color;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    background-color: transparent;
    border: $input-border-width solid $input-border-color;
    border-radius: $input-border-radius;
    transition: color 0.15s ease-in-out,
                background-color 0.15s ease-in-out,
                border-color 0.15s ease-in-out,
                box-shadow 0.15s ease-in-out;

    &:hover {
      color: $primary;
      border-color: $primary;
    }
  }

  // Button size variants
  &.sizeSm :global(.form-check-label) {
    padding: $input-padding-y-sm $input-padding-x-sm;
    font-size: $input-font-size-sm;
    border-radius: $input-border-radius-sm;
  }

  &.sizeLg :global(.form-check-label) {
    padding: $input-padding-y-lg $input-padding-x-lg;
    font-size: $input-font-size-lg;
    border-radius: $input-border-radius-lg;
  }
}

// Form check input base styles (for consistency)
.formCheck :global(.form-check-input) {
  position: absolute;
  margin-top: $form-check-input-margin-y;
  margin-left: -$form-check-input-gutter;
  width: 1rem;
  height: 1rem;
  vertical-align: top;
  background-color: $white;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  border: 1px solid rgba($black, 0.25);
  appearance: none;

  &[type="checkbox"] {
    border-radius: 0.25em;

    &:checked {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e");
    }

    &:indeterminate {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/%3e%3c/svg%3e");
    }
  }

  &[type="radio"] {
    border-radius: 50%;

    &:checked {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e");
    }
  }

  &:checked {
    background-color: $primary;
    border-color: $primary;
  }

  &:focus {
    border-color: lighten($primary, 25%);
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba($primary, 0.25);
  }

  &:disabled {
    pointer-events: none;
    filter: none;
    opacity: 0.5;
  }

  &:disabled ~ .form-check-label,
  &[disabled] ~ .form-check-label {
    opacity: 0.5;
  }
}

// Form check label base styles
.formCheck :global(.form-check-label) {
  color: $label-color;
  cursor: pointer;
}

// Group container (fieldset)
.formCheckGroup {
  border: none;
  margin: 0;
  padding: 0;
  margin-bottom: $form-group-margin-bottom;

  .groupLegend {
    display: block;
    width: 100%;
    padding: 0;
    margin-bottom: $label-margin-bottom;
    font-size: $label-font-size;
    font-weight: $label-font-weight;
    line-height: $input-line-height;
    color: $label-color;
    border: 0;
  }

  .groupDescription {
    margin-bottom: $form-text-margin-top;
    font-size: $form-text-font-size;
    color: $form-text-color;
  }
}

// Debug mode styles
.debug {
  outline: 1px dashed rgba($warning, 0.4);
  background: rgba($warning, 0.05);

  &::before {
    content: 'FormCheck Debug: ' attr(data-variant);
    position: absolute;
    top: -20px;
    left: 0;
    font-size: 9px;
    color: $warning;
    background: rgba($warning, 0.1);
    padding: 2px 4px;
    border-radius: 2px;
    z-index: 1000;
    white-space: nowrap;
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .formCheck :global(.form-check-input) {
    border-width: 2px;

    &:checked {
      border-width: 2px;
    }
  }

  .formCheck.variantButton :global(.form-check-label) {
    border-width: 2px;
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .formCheck :global(.form-check-input),
  .formCheck.variantSwitch :global(.form-check-input),
  .formCheck.variantSwitch :global(.form-check-input::before),
  .formCheck.variantButton :global(.form-check-label) {
    transition: none;
  }
}

// Print styles
@media print {
  .formCheck :global(.form-check-input:checked::after) {
    content: ' [âœ“]';
    color: $black;
    font-weight: bold;
  }

  .formCheck.variantSwitch :global(.form-check-input:checked::after) {
    content: ' [ON]';
  }
}
